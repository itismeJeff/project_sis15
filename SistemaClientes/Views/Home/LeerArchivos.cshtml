@{
    ViewData["Title"] = "Leer Archivos";
}

<div class="text-center">
    <h1 class="display-4">Leer Archivos XML y JSON</h1>
    <p class="lead">Carga y visualiza archivos XML y JSON de manera dinámica</p>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Leer Archivo XML</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="xmlFile" class="form-label">Seleccionar archivo XML:</label>
                    <input type="file" class="form-control" id="xmlFile" accept=".xml">
                </div>
                <button class="btn btn-primary" onclick="leerXML()">Leer XML</button>
                <div id="xmlResult" class="mt-3"></div>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Leer Archivo JSON</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="jsonFile" class="form-label">Seleccionar archivo JSON:</label>
                    <input type="file" class="form-control" id="jsonFile" accept=".json">
                </div>
                <button class="btn btn-success" onclick="leerJSON()">Leer JSON</button>
                <div id="jsonResult" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5>Datos Cargados</h5>
            </div>
            <div class="card-body">
                <div id="datosCargados">
                    <p class="text-muted">Los datos aparecerán aquí después de cargar un archivo...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ejemplo de archivos para descargar -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5>Archivos de Ejemplo</h5>
            </div>
            <div class="card-body">
                <p>Descarga estos archivos de ejemplo para probar la funcionalidad:</p>
                <button class="btn btn-outline-primary me-2" onclick="descargarEjemploXML()">Descargar ejemplo XML</button>
                <button class="btn btn-outline-success" onclick="descargarEjemploJSON()">Descargar ejemplo JSON</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function leerXML() {
            const fileInput = document.getElementById('xmlFile');
            const file = fileInput.files[0];
            
            if (!file) {
                $('#xmlResult').html('<div class="alert alert-warning">Por favor selecciona un archivo XML</div>');
                return;
            }
            
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const xmlText = e.target.result;
                    const parser = new DOMParser();
                    const xmlDoc = parser.parseFromString(xmlText, "text/xml");
                    
                    // Verificar si hay errores de parsing
                    const parseError = xmlDoc.getElementsByTagName("parsererror");
                    if (parseError.length > 0) {
                        $('#xmlResult').html('<div class="alert alert-danger">Error al parsear el archivo XML</div>');
                        return;
                    }
                    
                    // Extraer datos de clientes
                    const clientes = xmlDoc.getElementsByTagName("Cliente");
                    const datos = [];
                    
                    for (let i = 0; i < clientes.length; i++) {
                        const cliente = clientes[i];
                        const datosCliente = {
                            id: getElementText(cliente, "Id"),
                            cedula: getElementText(cliente, "Cedula"),
                            nombre: getElementText(cliente, "Nombre"),
                            apellido1: getElementText(cliente, "Apellido1"),
                            apellido2: getElementText(cliente, "Apellido2"),
                            fechaRegistro: getElementText(cliente, "FechaRegistro")
                        };
                        datos.push(datosCliente);
                    }
                    
                    mostrarDatosEnTabla(datos, 'XML');
                    $('#xmlResult').html('<div class="alert alert-success">Archivo XML leído exitosamente</div>');
                    
                } catch (error) {
                    $('#xmlResult').html('<div class="alert alert-danger">Error al leer el archivo XML: ' + error.message + '</div>');
                }
            };
            
            reader.readAsText(file);
        }
        
        function leerJSON() {
            const fileInput = document.getElementById('jsonFile');
            const file = fileInput.files[0];
            
            if (!file) {
                $('#jsonResult').html('<div class="alert alert-warning">Por favor selecciona un archivo JSON</div>');
                return;
            }
            
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const jsonText = e.target.result;
                    const datos = JSON.parse(jsonText);
                    
                    // Si es un array, usarlo directamente; si no, buscar la propiedad que contenga los datos
                    const clientes = Array.isArray(datos) ? datos : datos.clientes || datos.Clientes || [];
                    
                    mostrarDatosEnTabla(clientes, 'JSON');
                    $('#jsonResult').html('<div class="alert alert-success">Archivo JSON leído exitosamente</div>');
                    
                } catch (error) {
                    $('#jsonResult').html('<div class="alert alert-danger">Error al leer el archivo JSON: ' + error.message + '</div>');
                }
            };
            
            reader.readAsText(file);
        }
        
        function getElementText(parent, tagName) {
            const element = parent.getElementsByTagName(tagName)[0];
            return element ? element.textContent : '';
        }
        
        function mostrarDatosEnTabla(datos, tipo) {
            if (datos.length === 0) {
                $('#datosCargados').html('<div class="alert alert-info">No se encontraron datos en el archivo ' + tipo + '</div>');
                return;
            }
            
            let html = '<h6>Datos del archivo ' + tipo + ' (' + datos.length + ' registros)</h6>';
            html += '<table class="table table-striped table-bordered">';
            html += '<thead class="table-dark"><tr>';
            html += '<th>ID</th><th>Cédula</th><th>Nombre</th><th>Primer Apellido</th><th>Segundo Apellido</th><th>Fecha Registro</th>';
            html += '</tr></thead><tbody>';
            
            datos.forEach(function(cliente) {
                html += '<tr>';
                html += '<td>' + (cliente.id || cliente.Id || '') + '</td>';
                html += '<td>' + (cliente.cedula || cliente.Cedula || '') + '</td>';
                html += '<td>' + (cliente.nombre || cliente.Nombre || '') + '</td>';
                html += '<td>' + (cliente.apellido1 || cliente.Apellido1 || '') + '</td>';
                html += '<td>' + (cliente.apellido2 || cliente.Apellido2 || '') + '</td>';
                html += '<td>' + (cliente.fechaRegistro || cliente.FechaRegistro || '') + '</td>';
                html += '</tr>';
            });
            
            html += '</tbody></table>';
            $('#datosCargados').html(html);
        }
        
        function descargarEjemploXML() {
            const xmlContent = `<?xml version="1.0" encoding="UTF-8"?>
<Clientes>
    <Cliente>
        <Id>1</Id>
        <Cedula>123456789</Cedula>
        <Nombre>Juan</Nombre>
        <Apellido1>Pérez</Apellido1>
        <Apellido2>García</Apellido2>
        <FechaRegistro>2024-01-15 10:30:00</FechaRegistro>
    </Cliente>
    <Cliente>
        <Id>2</Id>
        <Cedula>987654321</Cedula>
        <Nombre>María</Nombre>
        <Apellido1>López</Apellido1>
        <Apellido2>Rodríguez</Apellido2>
        <FechaRegistro>2024-01-16 14:45:00</FechaRegistro>
    </Cliente>
</Clientes>`;
            
            const blob = new Blob([xmlContent], { type: 'application/xml' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'ejemplo_clientes.xml';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        }
        
        function descargarEjemploJSON() {
            const jsonContent = {
                clientes: [
                    {
                        id: 1,
                        cedula: "123456789",
                        nombre: "Juan",
                        apellido1: "Pérez",
                        apellido2: "García",
                        fechaRegistro: "2024-01-15T10:30:00"
                    },
                    {
                        id: 2,
                        cedula: "987654321",
                        nombre: "María",
                        apellido1: "López",
                        apellido2: "Rodríquez",
                        fechaRegistro: "2024-01-16T14:45:00"
                    }
                ]
            };
            
            const blob = new Blob([JSON.stringify(jsonContent, null, 2)], { type: 'application/json' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'ejemplo_clientes.json';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        }
    </script>
} 